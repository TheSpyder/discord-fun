// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Calc = require("./Calc.bs.js");
var Help = require("./Help.bs.js");
var Filter = require("./Filter.bs.js");
var Sysinfo = require("./Sysinfo.bs.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var DiscordJs = require("discord.js");
var ConfigJson = require("../config.json");

console.log("Hello, BuckleScript and Reason!");

var token = ConfigJson.token;

var client = new DiscordJs.Client();

client.on("ready", (function (param) {
        console.log("Bot is ready");
        client.user.setActivity("Proving spyder doesn't know discord");
        return /* () */0;
      }));

function reply(msg, str) {
  console.log("Responding with", str);
  msg.reply(str);
  return /* () */0;
}

client.on("message", (function (msg) {
        var match = msg.author.bot;
        var match$1 = msg.content.indexOf("!");
        var match$2 = msg.channel.name;
        if (match) {
          return /* () */0;
        } else {
          var exit = 0;
          if (match$1 !== 0) {
            exit = 1;
          } else {
            switch (match$2) {
              case "free-for-all" : 
              case "spyder-reasonml" : 
                  var msg$1 = msg;
                  console.log("Handling command", msg$1.content);
                  var command = Belt_List.fromArray(msg$1.content.substr(1).split(" "));
                  if (command) {
                    switch (command[0]) {
                      case "calc" : 
                          return reply(msg$1, Calc.calculate(command[1]));
                      case "help" : 
                          return reply(msg$1, Help.help(command[1]));
                      case "ping" : 
                          return reply(msg$1, "pong");
                      case "sysinfo" : 
                          msg$1.channel.send(Sysinfo.richInfo(/* () */0));
                          return /* () */0;
                      default:
                        return /* () */0;
                    }
                  } else {
                    return /* () */0;
                  }
              default:
                exit = 1;
            }
          }
          if (exit === 1) {
            if (match$2 === "spyder-reasonml") {
              return Filter.swears(msg);
            } else {
              return /* () */0;
            }
          }
          
        }
      }));

client.login(token);

/*  Not a pure module */
